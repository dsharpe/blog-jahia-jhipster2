{
  "name": "decompress",
  "version": "2.1.1",
  "description": "Extracting archives made easy",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/decompress"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "bin": {
    "decompress": "cli.js"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "files": [
    "cli.js",
    "index.js"
  ],
  "keywords": [
    "bz2",
    "bzip2",
    "decompress",
    "extract",
    "tar",
    "tar.bz",
    "tar.gz",
    "zip",
    "unzip"
  ],
  "dependencies": {
    "concat-stream": "^1.4.6",
    "decompress-tar": "^2.0.0",
    "decompress-tarbz2": "^2.0.0",
    "decompress-targz": "^2.0.0",
    "decompress-unzip": "^2.0.0",
    "get-stdin": "^3.0.0",
    "meow": "^2.0.0",
    "stream-combiner": "^0.2.1",
    "through2": "^0.6.1",
    "vinyl": "^0.4.3",
    "vinyl-fs": "^0.3.7"
  },
  "devDependencies": {
    "ava": "0.0.4",
    "rimraf": "^2.2.8"
  },
  "readme": "# decompress [![Build Status](http://img.shields.io/travis/kevva/decompress.svg?style=flat)](https://travis-ci.org/kevva/decompress)\n\n> Extracting archives made easy\n\n## Install\n\n```sh\n$ npm install --save decompress\n```\n\n## Usage\n\n```js\nvar Decompress = require('decompress');\n\nvar decompress = new Decompress({ mode: '755' })\n\t.src('foo.zip')\n\t.dest('destFolder')\n\t.use(Decompress.zip({ strip: 1 }));\n\ndecompress.run(function (err) {\n\tif (err) {\n\t\tthrow err;\n\t}\n\n\tconsole.log('Archive extracted successfully!');\n});\n```\n\n## API\n\n### new Decompress(opts)\n\nCreates a new `Decompress` instance.\n\n### .src(files)\n\nType: `Array|Buffer|String`\n\nSet the files to be extracted.\n\n### .dest(path)\n\nType: `String`\n\nSet the destination to where your file will be extracted to.\n\n### .use(plugin)\n\nType: `Function`\n\nAdd a `plugin` to the middleware stack.\n\n### .run(cb)\n\nType: `Function`\n\nExtract your file with the given settings.\n\n#### cb(err, files, stream)\n\nThe callback will return an array of vinyl files in `files` and a Readable/Writable \nstream in `stream`.\n\n## Options\n\n### mode\n\nType: `String`  \n\nSet mode on the extracted files, i.e `{ mode: '755' }`.\n\n### strip\n\nType: `Number`  \n\nEquivalent to `--strip-components` for tar.\n\n## Plugins\n\nThe following [plugins](https://www.npmjs.org/browse/keyword/decompressplugin) are bundled with decompress:\n\n* [tar](#tar) — Extract TAR files.\n* [tar.bz2](#tarbz2) — Extract TAR.BZ files.\n* [tar.gz](#targz) — Extract TAR.GZ files.\n* [zip](#zip) — Extract ZIP files.\n\n### .tar()\n\nExtract TAR files.\n\n```js\nvar Decompress = require('decompress');\n\nvar decompress = new Decompress()\n\t.use(Decompress.tar({ strip: 1 }));\n```\n\n### .tarbz2()\n\nExtract TAR.BZ files.\n\n```js\nvar Decompress = require('decompress');\n\nvar decompress = new Decompress()\n\t.use(Decompress.tarbz2({ strip: 1 }));\n```\n\n### .targz()\n\nExtract TAR.GZ files.\n\n```js\nvar Decompress = require('decompress');\n\nvar decompress = new Decompress()\n\t.use(Decompress.targz({ strip: 1 }));\n```\n\n### .zip()\n\nExtract ZIP files.\n\n```js\nvar Decompress = require('decompress');\n\nvar decompress = new Decompress()\n\t.use(Decompress.zip({ strip: 1 }));\n```\n\n## CLI\n\n```bash\n$ npm install --global decompress\n```\n\n```sh\n$ decompress --help\n\nUsage\n  decompress <file> [directory]\n  cat <file> | decompress [directory]\n\nExample\n  decompress --strip 1 file.zip out\n  cat file.zip | decompress out\n\nOptions\n  -m, --mode     Set mode on the extracted files\n  -s, --strip    Equivalent to --strip-components for tar\n```\n\n## License\n\nMIT © [Kevin Mårtensson](https://github.com/kevva)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kevva/decompress/issues"
  },
  "homepage": "https://github.com/kevva/decompress",
  "_id": "decompress@2.1.1",
  "_shasum": "26ab6d821e59bfe91e7f17ed354905936dab6c55",
  "_from": "decompress@^2.1.1",
  "_resolved": "https://registry.npmjs.org/decompress/-/decompress-2.1.1.tgz"
}
