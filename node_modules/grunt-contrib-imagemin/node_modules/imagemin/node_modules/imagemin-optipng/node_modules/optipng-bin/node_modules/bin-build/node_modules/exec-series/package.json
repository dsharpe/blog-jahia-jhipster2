{
  "name": "exec-series",
  "version": "1.0.1",
  "description": "Run commands in order",
  "repository": {
    "type": "git",
    "url": "git://github.com/shinnn/exec-series"
  },
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "scripts": {
    "pretest": "eslint *.js & jscs *.js",
    "test": "node test.js | tap-spec",
    "coverage": "istanbul cover test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shinnn/exec-series/blob/master/LICENSE"
    }
  ],
  "files": [
    "index.js",
    "LICENSE"
  ],
  "keywords": [
    "child_process",
    "exec",
    "series",
    "command",
    "sequence",
    "sequential",
    "sequentially",
    "order"
  ],
  "dependencies": {
    "async-each-series": "^0.1.0"
  },
  "devDependencies": {
    "eslint": "^0.8.2",
    "is-appveyor": "^1.0.0",
    "istanbul": "^0.3.2",
    "istanbul-coveralls": "^1.0.1",
    "jscs": "^1.7.3",
    "rimraf": "^2.2.8",
    "tap-spec": "^1.0.1",
    "tape": "^3.0.1"
  },
  "readme": "# exec-series\n\n[![Build Status](https://travis-ci.org/shinnn/exec-series.svg?branch=master)](https://travis-ci.org/shinnn/exec-series)\n[![Build status](https://ci.appveyor.com/api/projects/status/bi4pflltlq5368ym?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/exec-series)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/exec-series.svg)](https://coveralls.io/r/shinnn/exec-series)\n[![Dependency Status](https://david-dm.org/shinnn/exec-series.svg)](https://david-dm.org/shinnn/exec-series)\n[![devDependency Status](https://david-dm.org/shinnn/exec-series/dev-status.svg)](https://david-dm.org/shinnn/exec-series#info=devDependencies)\n\nA [Node](http://nodejs.org/) module to run commands in order\n\n```javascript\nvar execSeries = require('exec-series');\n\nexecSeries(['echo \"foo\"', 'echo \"bar\"'], function(err, stdouts, stderrs) {\n  if (err) {\n    throw err;\n  }\n\n  console.log(stdouts); // yields: ['foo', 'bar']\n  console.log(stderrs); // yields: ['', '']\n});\n```\n\nOn Linux, you can do almost the same thing with [`&&`](http://tldp.org/LDP/abs/html/list-cons.html#LISTCONSREF) operator like below:\n\n```javascript\nvar exec = require('child_process').exec;\n\nexec('echo \"foo\" && echo \"bar\"', function(err, stdout, stderr) {\n  //...\n});\n```\n\nHowever, some environments, such as [Windows PowerShell](https://connect.microsoft.com/PowerShell/feedback/details/778798/implement-the-and-operators-that-bash-has), don't support `&&` operator. This module helps you to create a [cross-platform Node program](https://gist.github.com/domenic/2790533).\n\n## Installation\n\n[![NPM version](https://badge.fury.io/js/exec-series.svg)](https://www.npmjs.org/package/exec-series)\n\n[Use npm](https://www.npmjs.org/doc/cli/npm-install.html).\n\n```\nnpm install exec-series\n```\n\n## API\n\n```javascript\nvar execSeries = require('exec-series');\n```\n\n### execSeries(*commands* [, options, callback])\n\n*commands*: `Array` of `String` (the commands to run)  \n*options*: `Object` ([child_process.exec][exec] options)  \n*callback*: `Function`\n\nIt sequentially runs the commands using [child_process.exec][exec]. If the first command has finished successfully, the second command will run, and so on.\n\nWhen the last command has finished, it runs the callback function.\n\nWhen one of the commands fails, it immediately calls the callback function and the rest of the commands won't run.\n\n#### callback(error, stdoutArray, stderrArray)\n\n*error*: `Error` if one of the commands fails, otherwise `undefined`  \n*stdoutArray*: `Array` of `String` (stdout of the commands)  \n*stderrArray*: `Array` of `String` (stderr of the commands)\n\n```javascript\nexecSeries([\n  'mkdir foo',\n  'echo bar',\n  'exit 200',\n  'mkdir baz'\n], function(err, stdouts, stderrs) {\n  err.code; //=> 200\n  stdouts; //=> ['', 'bar\\n', '']\n  stderrs; //=> ['', '', '']\n  \n  fs.existsSync('foo'); //=> true\n  fs.existsSync('baz'); //=> false\n});\n```\n\nCallback function is optional.\n\n```javascript\nexecSeries(['mkdir foo', 'mkdir bar']);\n\nsetTimeout(function() {\n  fs.existsSync('foo'); //=> true\n  fs.existsSync('bar'); //=> true\n}, 1000);\n```\n\n## License\n\nCopyright (c) 2014 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n\n[exec]: http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shinnn/exec-series/issues"
  },
  "homepage": "https://github.com/shinnn/exec-series",
  "_id": "exec-series@1.0.1",
  "_shasum": "88a3f28e80032153448ef0eaf951c6fab59c0341",
  "_from": "exec-series@^1.0.0",
  "_resolved": "https://registry.npmjs.org/exec-series/-/exec-series-1.0.1.tgz"
}
